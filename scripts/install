#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source ynh_install_ruby__2
source /usr/share/yunohost/helpers


#REMOVEME ?
secret_key_base=$(ynh_string_random --length=30)
admin_mail=$(ynh_user_get_info --username=$admin --key=mail)

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
#REMOVEME ?
ynh_app_setting_set --app=$app --key=language --value=$language
ynh_app_setting_set --app=$app --key=secret_key_base --value=$secret_key_base

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================

#REMOVEME ?
ynh_install_nodejs --nodejs_version=$nodejs_version
#REMOVEME ?
ynh_install_ruby --ruby_version=$ruby_version

#=================================================
# CREATE A POSTGRESQL DATABASE
#=================================================
ynh_psql_execute_as_root --sql="ALTER USER $db_user WITH SUPERUSER;" --database="$db_name"
ynh_psql_execute_as_root --sql="CREATE EXTENSION IF NOT EXISTS ltree;" --database=$db_name
ynh_psql_execute_as_root --sql="CREATE EXTENSION IF NOT EXISTS pg_trgm;" --database=$db_name
ynh_psql_execute_as_root --sql="ALTER USER $db_user WITH NOSUPERUSER;" --database="$db_name"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=1

# Download, check integrity, uncompress and patch the source from app.src
mkdir -p "$install_dir"

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SPECIFIC SETUP
#=================================================
# INSTALL GEMS
#=================================================
ynh_script_progression --message="Installing gems..." --weight=1

pushd $install_dir
	ynh_use_ruby
	ynh_use_nodejs
	ynh_exec_warn_less $ynh_gem install bundler
	#ynh_exec_warn_less $ynh_gem install rails --version $rails_version
	ynh_exec_warn_less $ynh_gem install decidim -v $(ynh_app_upstream_version)
	ynh_exec_warn_less decidim live
popd

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# CREATE DATA DIRECTORY
#=================================================
ynh_script_progression --message="Creating a data directory..." --weight=1

mkdir -p $data_dir

chmod 750 "$data_dir"
chmod -R o-rwx "$data_dir"
chown -R $app:www-data "$data_dir"

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding a configuration file..." --weight=1

ynh_add_config --template="../conf/schedule.rb" --destination="$install_dir/live/config/schedule.rb"
chmod 400 "$install_dir/live/config/schedule.rb"
chown $app:$app "$install_dir/live/config/schedule.rb"

ynh_add_config --template="../conf/application.yml" --destination="$install_dir/live/config/application.yml"
chmod 400 "$install_dir/live/config/application.yml"
chown $app:$app "$install_dir/live/config/application.yml"

ynh_add_config --template="../conf/storage.yml" --destination="$install_dir/live/config/storage.yml"
chmod 400 "$install_dir/live/config/storage.yml"
chown $app:$app "$install_dir/live/config/storage.yml"

ynh_add_config --template="../conf/delayed_job_cron.sh" --destination="$install_dir/live/bin/delayed_job_cron.sh"
chmod 400 "$install_dir/live/bin/delayed_job_cron.sh"
chown $app:$app "$install_dir/live/bin/delayed_job_cron.sh"
chmod +x "$install_dir/live/bin/delayed_job_cron.sh"

ynh_add_config --template="../conf/cron" --destination="/etc/cron.d/$app"
chown root: "/etc/cron.d/$app"
chmod 644 "/etc/cron.d/$app"

#=================================================
# BUILD APP
#=================================================
ynh_script_progression --message="Building app..." --weight=1

pushd "$install_dir/live"
 	ynh_secure_remove --file="$install_dir/live/Gemfile.lock"
	bundle add figaro --skip-install
	bundle add passenger --group production --skip-install
	bundle add delayed_job_active_record --group production --skip-install
	bundle add daemons --group production --skip-install
	echo 'gem "whenever", require: false' >> "Gemfile"
	bundle install
	ynh_exec_warn_less ynh_exec_as $app env RAILS_ENV=production RACK_ENV=production $ynh_ruby_load_path bin/rails db:migrate
	ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH yarn add rails-ujs
	ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH yarn add graphql-ws
	ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH yarn install
	ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH yarn cache clean
	sed -i 's/require "decidim\/rails"/require "decidim\/rails"\nrequire "action_cable\/engine"/' config/application.rb
	echo 'Rails.autoloaders.main.ignore(Gem::Specification.find_by_name("decidim-core").gem_dir + "/app/packs")' >> config/application.rb
	ynh_exec_warn_less ynh_exec_as $app env RAILS_ENV=production RACK_ENV=production $ynh_ruby_load_path bin/rails assets:precompile
	ynh_exec_warn_less ynh_exec_as $app env RAILS_ENV=production RACK_ENV=production $ynh_ruby_load_path bin/rails runner "Decidim::System::Admin.new(email: '$admin_mail', password: '$password', password_confirmation: '$password').save!"
	ynh_exec_warn_less ynh_exec_as $app env RAILS_ENV=production RACK_ENV=production $ynh_ruby_load_path bin/rails generate delayed_job:active_record
	ynh_exec_warn_less ynh_exec_as $app env RAILS_ENV=production RACK_ENV=production $ynh_ruby_load_path bin/rake db:migrate
popd

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
