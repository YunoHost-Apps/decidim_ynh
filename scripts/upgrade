#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source ynh_install_ruby__2
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
#REMOVEME? ynh_script_progression --message="Loading installation settings..." --weight=1

#REMOVEME? app=$YNH_APP_INSTANCE_NAME

#REMOVEME? domain=$(ynh_app_setting_get --app=$app --key=domain)
#REMOVEME? path=$(ynh_app_setting_get --app=$app --key=path)
#REMOVEME? language=$(ynh_app_setting_get --app=$app --key=language)
#REMOVEME? admin=$(ynh_app_setting_get --app=$app --key=admin)
#REMOVEME? #REMOVEME? install_dir=$(ynh_app_setting_get --app=$app --key=install_dir)
#REMOVEME? db_name=$(ynh_app_setting_get --app=$app --key=db_name)
#REMOVEME? db_user=$db_name
#REMOVEME? db_pwd=$(ynh_app_setting_get --app=$app --key=psqlpwd)
#REMOVEME? data_dir=$(ynh_app_setting_get --app=$app --key=data_dir)
#REMOVEME? secret_key_base=$(ynh_app_setting_get --app=$app --key=secret_key_base)

#=================================================
# CHECK VERSION
#=================================================
ynh_script_progression --message="Checking version..." --weight=1

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
#REMOVEME? ynh_script_progression --message="Backing up the app before upgrading (may take a while)..." --weight=1

# Backup the current version of the app
#REMOVEME? ynh_backup_before_upgrade
#REMOVEME? ynh_clean_setup () {
	# Restore it if the upgrade fails
#REMOVEME? 	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
#REMOVEME? ynh_abort_if_errors

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..." --weight=1

# Cleaning legacy permissions
#REMOVEME? if ynh_legacy_permissions_exists; then
#REMOVEME? 	ynh_legacy_permissions_delete_all

	ynh_app_setting_delete --app=$app --key=is_public
fi

#=================================================
# CREATE DEDICATED USER
#=================================================
#REMOVEME? ynh_script_progression --message="Making sure dedicated system user exists..." --weight=1

# Create a dedicated user (if not existing)
#REMOVEME? ynh_system_user_create --username=$app --home_dir="$install_dir"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..." --weight=1

	# Download, check integrity, uncompress and patch the source from app.src
fi

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
#REMOVEME? ynh_script_progression --message="Upgrading dependencies..." --weight=1

#REMOVEME? ynh_install_app_dependencies $pkg_dependencies $build_pkg_dependencies
ynh_install_nodejs --nodejs_version=$nodejs_version
#REMOVEME? ynh_install_extra_app_dependencies --repo="deb https://dl.yarnpkg.com/debian/ stable main" --package="yarn" --key="https://dl.yarnpkg.com/debian/pubkey.gpg"
apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 561F9B9CAC40B2F7
#REMOVEME? ynh_install_extra_app_dependencies --repo="deb https://oss-binaries.phusionpassenger.com/apt/passenger $(lsb_release -cs) main" --package="libnginx-mod-http-passenger"
ynh_install_ruby --ruby_version=$ruby_version

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SPECIFIC UPGRADE
#=================================================
# INSTALL GEMS
#=================================================
ynh_script_progression --message="Installing gems..." --weight=1

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	pushd $install_dir
		ynh_use_ruby
		ynh_use_nodejs
		ynh_exec_warn_less $ynh_gem install bundler
		#ynh_exec_warn_less $ynh_gem install rails --version $rails_version
		ynh_exec_warn_less $ynh_gem install decidim -v $(ynh_app_upstream_version)
	popd
fi

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding a configuration file..." --weight=1

ynh_add_config --template="../conf/schedule.rb" --destination="$install_dir/live/config/schedule.rb"
chmod 400 "$install_dir/live/config/schedule.rb"
chown $app:$app "$install_dir/live/config/schedule.rb"

ynh_add_config --template="../conf/application.yml" --destination="$install_dir/live/config/application.yml"
chmod 400 "$install_dir/live/config/application.yml"
chown $app:$app "$install_dir/live/config/application.yml"

ynh_add_config --template="../conf/storage.yml" --destination="$install_dir/live/config/storage.yml"
chmod 400 "$install_dir/live/config/storage.yml"
chown $app:$app "$install_dir/live/config/storage.yml"

ynh_add_config --template="../conf/delayed_job_cron.sh" --destination="$install_dir/live/bin/delayed_job_cron.sh"
chmod 400 "$install_dir/live/bin/delayed_job_cron.sh"
chown $app:$app "$install_dir/live/bin/delayed_job_cron.sh"
chmod +x "$install_dir/live/bin/delayed_job_cron.sh"

ynh_add_config --template="../conf/cron" --destination="/etc/cron.d/$app"
chown root: "/etc/cron.d/$app"
chmod 644 "/etc/cron.d/$app"

#=================================================
# BUILD APP
#=================================================
ynh_script_progression --message="Building app..." --weight=1

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	pushd "$install_dir/live"
#REMOVEME? 		ynh_secure_remove --file="$install_dir/live/Gemfile.lock"
		bundle install
		bundle update decidim
		ynh_exec_warn_less ynh_exec_as $app env RAILS_ENV=production RACK_ENV=production $ynh_ruby_load_path bin/rails decidim:upgrade
		ynh_exec_warn_less ynh_exec_as $app env RAILS_ENV=production RACK_ENV=production $ynh_ruby_load_path bin/rails db:migrate
		ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH yarn add rails-ujs
		ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH yarn add graphql-ws
		ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH yarn install
		ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH yarn cache clean
		ynh_exec_warn_less ynh_exec_as $app env RAILS_ENV=production RACK_ENV=production $ynh_ruby_load_path bin/rails assets:precompile
	popd
fi

#REMOVEME? ynh_install_app_dependencies $pkg_dependencies
#REMOVEME? ynh_install_extra_app_dependencies --repo="deb https://oss-binaries.phusionpassenger.com/apt/passenger $(lsb_release -cs) main" --package="libnginx-mod-http-passenger"
ynh_package_autoremove

#=================================================
# GENERIC FINALIZATION
#=================================================
# RELOAD NGINX
#=================================================
#REMOVEME? ynh_script_progression --message="Reloading NGINX web server..." --weight=1

#REMOVEME? ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
