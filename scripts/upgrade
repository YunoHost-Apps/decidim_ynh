#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source ynh_install_ruby__2
source /usr/share/yunohost/helpers

#=================================================
# CHECK VERSION
#=================================================
ynh_script_progression --message="Checking version..." --weight=1

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# CREATE DEDICATED USER
#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..." --weight=1

	# Download, check integrity, uncompress and patch the source from app.src
fi

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
ynh_script_progression --message="Upgrading dependencies..." --weight=1

ynh_install_nodejs --nodejs_version=$nodejs_version
ynh_install_ruby --ruby_version=$ruby_version

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SPECIFIC UPGRADE
#=================================================
# INSTALL GEMS
#=================================================
ynh_script_progression --message="Installing gems..." --weight=1

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	pushd $install_dir
		ynh_use_ruby
		ynh_use_nodejs
		ynh_exec_warn_less $ynh_gem install bundler
		#ynh_exec_warn_less $ynh_gem install rails --version $rails_version
		ynh_exec_warn_less $ynh_gem install decidim -v $(ynh_app_upstream_version)
	popd
fi

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding a configuration file..." --weight=1

ynh_add_config --template="../conf/schedule.rb" --destination="$install_dir/live/config/schedule.rb"
chmod 400 "$install_dir/live/config/schedule.rb"
chown $app:$app "$install_dir/live/config/schedule.rb"

ynh_add_config --template="../conf/application.yml" --destination="$install_dir/live/config/application.yml"
chmod 400 "$install_dir/live/config/application.yml"
chown $app:$app "$install_dir/live/config/application.yml"

ynh_add_config --template="../conf/storage.yml" --destination="$install_dir/live/config/storage.yml"
chmod 400 "$install_dir/live/config/storage.yml"
chown $app:$app "$install_dir/live/config/storage.yml"

ynh_add_config --template="../conf/delayed_job_cron.sh" --destination="$install_dir/live/bin/delayed_job_cron.sh"
chmod 400 "$install_dir/live/bin/delayed_job_cron.sh"
chown $app:$app "$install_dir/live/bin/delayed_job_cron.sh"
chmod +x "$install_dir/live/bin/delayed_job_cron.sh"

ynh_add_config --template="../conf/cron" --destination="/etc/cron.d/$app"
chown root: "/etc/cron.d/$app"
chmod 644 "/etc/cron.d/$app"

#=================================================
# BUILD APP
#=================================================
ynh_script_progression --message="Building app..." --weight=1

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	pushd "$install_dir/live"
                ynh_secure_remove --file="$install_dir/live/Gemfile.lock"
		bundle install
		bundle update decidim
		ynh_exec_warn_less ynh_exec_as $app env RAILS_ENV=production RACK_ENV=production $ynh_ruby_load_path bin/rails decidim:upgrade
		ynh_exec_warn_less ynh_exec_as $app env RAILS_ENV=production RACK_ENV=production $ynh_ruby_load_path bin/rails db:migrate
		ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH yarn add rails-ujs
		ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH yarn add graphql-ws
		ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH yarn install
		ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH yarn cache clean
		ynh_exec_warn_less ynh_exec_as $app env RAILS_ENV=production RACK_ENV=production $ynh_ruby_load_path bin/rails assets:precompile
	popd
fi

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
